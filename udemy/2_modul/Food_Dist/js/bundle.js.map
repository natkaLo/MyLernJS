{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;;AC/GuB;AACI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAmB;AAC/B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC,6BAA6B;AAC9D;AACA,cAAc;AACd,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,yBAAyB;AACzB;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;ACpLpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iEAAe,KAAK,EAAC;AACrB;AAC6B;;;;;;;;;;;;;;;AC7E7B,iBAAiB,oFAAoF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,YAAY;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,kCAAkC;AAClC,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,4EAA4E;AAC5E;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB;AACA,gDAAgD,cAAc;AAC9D;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,iEAAe,MAAM,EAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G,YAAY;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,sCAAsC;AACtC,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF,+EAA+E;AAC/E;AACA;AACA;AACA,2BAA2B;AAC3B,uBAAuB;AACvB;AACA,oDAAoD,cAAc;AAClE;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;;;;;;;;;;;;;ACxYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC5CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,+DAA+D;AAC/D,4DAA4D;AAC5D,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iEAAe,KAAK;;;;;;;;;;;;;;AC7DpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA,iCAAiC;AACjC;AACA;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA;AACA,8BAA8B,KAAK,MAAM,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,iEAAiE,MAAM;AACvE;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;;;;;UCvOA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA;AACA;AACA,CAAoC;AACpC,CAAsC;AACtC,CAAuC;AACvC,CAAuC;AACvC,CAAqC;AACrC,CAAwC;AACxC,CAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mEAAmB;AAC9D;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR;AACA,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA,c","sources":["webpack://food_dist/./js/modules/calc.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/modal.js","webpack://food_dist/./js/modules/slider.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/./js/services/services.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/webpack/runtime/define property getters","webpack://food_dist/webpack/runtime/hasOwnProperty shorthand","webpack://food_dist/webpack/runtime/make namespace object","webpack://food_dist/./js/script.js"],"sourcesContent":["function calc(){\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // калькулятор калорий\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    function setLocalStorageData(key, value){\r\n        localStorage.setItem(key,value);\r\n    }\r\n    const result = document.querySelector(\".calculating__result span\");\r\n    let sex = 'female',height,weight,age,ratio = '1.375';\r\n   \r\n\r\n    function initLocalSettings(selector,activeClass)\r\n    {\r\n        if(localStorage.getItem('sex')){\r\n            sex = localStorage.getItem('sex');\r\n        }\r\n        setLocalStorageData('sex',sex);\r\n        if(localStorage.getItem('ratio')){\r\n            ratio = localStorage.getItem('ratio');\r\n        }\r\n        setLocalStorageData('ratio',ratio);\r\n\r\n        const elemenents = document.querySelectorAll(selector);\r\n        //console.log(elemenents);\r\n        elemenents.forEach(elem =>{\r\n            elem.classList.remove(activeClass);\r\n            if(elem.getAttribute('id') === localStorage.getItem('sex')){\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n    function calcTotal(){\r\n        //проверка, что все данные заполнены\r\n        if(!sex || !height || !weight || !age || !ratio){\r\n            result.textContent = '______';\r\n            return;\r\n        }\r\n        if(sex === 'female'){\r\n            result.textContent = Math.round((447.6+(9.2*weight)+(3.1*height)-(4.3*age)) * ratio);\r\n        }\r\n        else{\r\n            result.textContent = Math.round((88.36+(13.4*weight)+(4.8*height)-(5.7*age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass){\r\n        const elemenents = document.querySelectorAll(selector);// получаем все дивы внутри родительского элемента\r\n\r\n        elemenents.forEach(elem=>{\r\n            elem.addEventListener('click', (e)=>{\r\n                if(e && e.target.getAttribute('data-ratio')){       //если кликаем на активность\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    setLocalStorageData('ratio',ratio);\r\n                }\r\n                else{                                               //если кликаем на пол\r\n                    sex = e.target.getAttribute('id');\r\n                    setLocalStorageData('sex',sex);\r\n                }\r\n                elemenents.forEach(elem =>{\r\n                    elem.classList.remove(activeClass);\r\n                 });\r\n                e.target.classList.add(activeClass);\r\n            });\r\n          calcTotal();\r\n        });\r\n    }\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector){\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input',()=>{\r\n\r\n            if(input.value.match(/\\D/g)) //пользователь вводит не число\r\n            {\r\n                input.style.border = \"1px solid red \";\r\n            }\r\n            else{\r\n                input.style.border = \"none\";\r\n            }\r\n            switch(input.getAttribute('id')){\r\n                case 'height': \r\n                    height = +input.value;\r\n                break;\r\n                case 'weight': \r\n                    weight = +input.value;\r\n                break;\r\n                case 'age': \r\n                    age = +input.value;\r\n                break;\r\n            }\r\n            calcTotal();\r\n        });\r\n    }\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\n//module.exports = calc;    //можно писать так\r\n// можно эксортировать по умолчанию\r\nexport default calc;","import{ShowHideModalWindow} from'./modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction cards(modalSelector){\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //Наше меню на день - используем классы для карточек\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    const modalWindow = document.querySelector(modalSelector);\r\n\r\n    class MenuCard {\r\n        constructor(src, alt, title, description, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.description = description;\r\n            this.price = price;\r\n            this.classes = classes; //массив\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n        // из долларов в гривны\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n        // формирование верстки\r\n        render() {\r\n            const element = document.createElement('div');\r\n            //обработаем массив classes\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = ` \r\n                <div class=\"menu__item\">\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.description}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element); //помещаем элемент на страницу в родительский элемент\r\n        }\r\n    }\r\n\r\n    // const vegy = new MenuCard(\"img/tabs/vegy.jpg\",\"vegy\",'Меню \"Фитнес\"','Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей.\r\n    // Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',229,'.container');\r\n    //console.log(document.querySelector('.menu .menu__field .container'));\r\n\r\n    //создаем карточки с помощью функции getResource\r\n    // new MenuCard(\r\n    //     \"img/tabs/vegy.jpg\",\r\n    //     \"vegy\",\r\n    //     'Меню \"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     9,\r\n    //     '.menu .menu__field .container',\r\n    //     'menu__item',\r\n    //     'big'\r\n\r\n    // ).render();\r\n    // new MenuCard(\r\n    //     \"img/tabs/elite.jpg\",\r\n    //     \"elite\",\r\n    //     'Меню “Премиум”',\r\n    //     'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!',\r\n    //     15,\r\n    //     '.menu .menu__field .container'\r\n\r\n    // ).render();\r\n    // new MenuCard(\r\n    //     \"img/tabs/post.jpg\",\r\n    //     \"post\",\r\n    //     'Меню \"Постное\"',\r\n    //     'Меню \"Постное\" - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.',\r\n    //     12,\r\n    //     '.menu .menu__field .container',\r\n    //     'menu__item'\r\n    // ).render();\r\n   \r\n    const forms = document.querySelectorAll('form');\r\n\r\n    //красивое оповещение пользователя\r\n    function showThanksModal(message) {\r\n        //будем скрывать существующее модальное окно и создавать новое со статусом\r\n        const prevModalDialog = modalWindow.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n\r\n        if (!modalWindow.classList.contains('show')) {\r\n            ShowHideModalWindow(modalWindow);\r\n        }\r\n        //cоздание нового окна\r\n        const thankModal = document.createElement('div');\r\n        thankModal.classList.add('modal__dialog');\r\n        thankModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\" data-close>&times;</div>\r\n                    <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        modalWindow.append(thankModal);\r\n\r\n        setTimeout(() => {\r\n            thankModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            ShowHideModalWindow(modalWindow);\r\n        }, 4000);\r\n\r\n    }\r\n\r\n    const message = {\r\n        //loading: 'Загрузка',\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с Вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n    forms.forEach(item => {\r\n        //postData(item); //старая закоменченная функция\r\n        bindpostData(item);\r\n\r\n    });\r\n\r\n    axios.get('http://localhost:3000/menu')\r\n    .then(data =>{\r\n             data.data.forEach(({img,altimg,title,descr,price}) =>{\r\n                 new MenuCard(img,altimg,title,descr,price,'.menu .menu__field .container').render();\r\n             });\r\n     });\r\n\r\n    function bindpostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            //сообщение с картинкой\r\n            const statusMessageImg = document.createElement('img');\r\n            statusMessageImg.src = message.loading;\r\n            statusMessageImg.style.cssText = `\r\n                     display:block;\r\n                     margin:0 auto;\r\n                 `;\r\n            form.insertAdjacentElement('afterend', statusMessageImg);\r\n\r\n            const formData = new FormData(form);\r\n            //нужно превратить FormData в обычный объект для JSON\r\n            //старый способ\r\n            //const object = {};\r\n            // formData.forEach(function(value,key){\r\n            //       object[key] = value;\r\n            //  });\r\n            //\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    //показ формы о загрузке\r\n                    showThanksModal(message.success);\r\n                    //убираем сообщение о статусе\r\n                    statusMessageImg.remove();\r\n                }).catch(() => {\r\n                    showThanksModal(message.failure);\r\n                }).finally(() => {\r\n                    //очистка полей формы\r\n                    form.reset();\r\n\r\n                });\r\n        });\r\n    }\r\n}\r\n//module.exports = cards;//можно писать так\r\n// можно эксортировать по умолчанию\r\nexport default cards;","function ShowHideModalWindow(wnd, modalTimerID) {\r\n\r\n    let modalWindow = wnd;\r\n    if(typeof(wnd) === 'string'){\r\n        modalWindow = document.querySelector(wnd);\r\n    }\r\n    modalWindow.classList.toggle('show');\r\n\r\n    //чтобы если на экране показано модальное окно - прокрутка документа не работала\r\n    let overflow = '';\r\n    if (modalWindow.classList.contains('show')) {\r\n        overflow = 'hidden';\r\n    }\r\n    document.body.style.overflow = overflow;\r\n    // останавливаем таймер\r\n    console.log(modalTimerID);\r\n    if(modalTimerID){\r\n        clearInterval(modalTimerID);\r\n    }\r\n   \r\n    //  if(wnd.classList.contains('show')){\r\n    //         wnd.classList.add('hide');\r\n    //         wnd.classList.remove('show');\r\n    //  }\r\n    //  else{\r\n\r\n    //      wnd.classList.add('show');\r\n    //      wnd.classList.remove('hide');\r\n    //  }\r\n}\r\nfunction modal(trigerSelector, modalSelector, modalTimerID){\r\n\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //модальное окно\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    const modalWindow = document.querySelector(modalSelector);\r\n    const modalTriggers = document.querySelectorAll(trigerSelector); //'[...]' - получение через data аттрибут\r\n    \r\n    modalTriggers.forEach(trigger => {\r\n        trigger.addEventListener('click', () => ShowHideModalWindow(modalWindow,modalTimerID));\r\n    });\r\n    //добавим  в условии  event.target.getAttribute('data-close')==''\r\n    //modalWindow.querySelector('[data-close]').addEventListener('click', () =>ShowHideModalWindow(modalWindow,modalTimerID));\r\n\r\n    modalWindow.addEventListener('click', (event) => {\r\n        if (event.target === modalWindow || event.target.getAttribute('data-close') == '') {\r\n            ShowHideModalWindow(modalWindow,modalTimerID);\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modalWindow.classList.contains('show')) {\r\n            ShowHideModalWindow(modalWindow,modalTimerID);\r\n        }\r\n    });\r\n\r\n   \r\n\r\n    //вызов модального окна по скролу к концу документа\r\n\r\n    //window.pageYOffset - прокрученная часть\r\n    // document.documentElement.clientHeight - видимая часть документа\r\n    // document.documentElement.scrollHeight - высота всего сайта\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            ShowHideModalWindow(modalWindow,modalTimerID);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n    //deлаем ф-цию колбек showModalByScroll чтобы в ней убрать листенера. При повторной прокрутке до конца документа окно не покажется\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n//module.exports = modal;//можно писать так\r\n// можно эксортировать по умолчанию\r\nexport default modal;\r\n//именованный экспорт\r\nexport {ShowHideModalWindow};\r\n","function slider({container, slide, nextArrow, prevArrow, totalCounter,currentCounter, wrapper, field}){\r\n    \r\n    //////////////////////////////////////////////////////////////////////////////\r\n   //cлайдер\r\n   //////////////////////////////////////////////////////////////////////////////\r\n\r\n   //1 variant \r\n   // const offerSlider = document.querySelector('.offer__slider');\r\n   // const currentElement = offerSlider.querySelector('.offer__slider-counter #current');\r\n   // const offerSlides = offerSlider.querySelector('.offer__slider-wrapper').querySelectorAll('.offer__slide');\r\n   // const totalSlides = offerSlides.length;\r\n   // offerSlider.querySelector('.offer__slider-counter #total').textContent = (totalSlides < 10)? `0${totalSlides}`:totalSlides;\r\n   // currentElement.textContent = '01';\r\n\r\n  \r\n   // function getCurrent(element){\r\n   //     return +element.textContent;\r\n   // }\r\n   // const setCurrent = (current,element,total = totalSlides)=>{\r\n   //     //console.log(getCurrent(element));\r\n   //     //console.log(current);\r\n   //     if(current <= 0){ current = total;}\r\n   //     else if(current> total){current = 1;} \r\n   //     element.textContent = (current < 10)? `0${current}`:current;\r\n       \r\n   //     offerSlides.forEach((slide,index)=>{\r\n   //         if(!slide.classList.contains('hide')){\r\n   //             slide.classList.add('hide');\r\n   //         }\r\n   //         if(slide.classList.contains('show')){\r\n   //             slide.classList.remove('show');\r\n   //         }\r\n   //         if(index == current -1){\r\n   //             slide.classList.remove('hide');\r\n   //             slide.classList.add('show');\r\n   //         }\r\n   //     });\r\n   // };\r\n   // offerSlider.querySelector('.offer__slider-counter').addEventListener('click', (e)=>{\r\n   //     e.preventDefault();\r\n   //     if(e.target){\r\n   //         let current = getCurrent(currentElement);\r\n   //         if(e.target.matches('.offer__slider-prev')){\r\n   //             setCurrent(--current, currentElement);\r\n   //         }\r\n   //         else if(e.target.matches('.offer__slider-next')){\r\n   //             setCurrent(++current, currentElement);\r\n   //         }\r\n   //     }\r\n   // });\r\n   // //init\r\n   // setCurrent(getCurrent(currentElement), currentElement);\r\n\r\n   //////////////////////////////////////////////////////////////////////////////\r\n   //2 variant лента слайдов\r\n\r\n   function deleteNotDigits(str){\r\n       return +str.replace(/\\D/g,'');\r\n   }\r\n   const  slidesWraper = document.querySelector(wrapper), // общая обертка для всех слайдов\r\n           prev = document.querySelector(prevArrow),                        //кнопка prev\r\n           next = document.querySelector(nextArrow),                        //кнопка next\r\n           total = document.querySelector(totalCounter),                    //поле total\r\n           current = document.querySelector(currentCounter),                //поле current\r\n           slides = document.querySelectorAll(slide),                       //каждый отдельный слайд\r\n           slidesField = document.querySelector(field),                     // общая обертка для всех слайдов внутри slidesWraper\r\n           width = window.getComputedStyle(slidesWraper).width,            //видимая ширина ленты слайдов вычисленная автоматически при загрузке\r\n           // widthInt = +width.slice(0, width.length -2);                   //видимая ширина ленты число (width - это строка ..px)\r\n           widthInt = deleteNotDigits(width);                               // все не числа заменяем пустыми символами (удаляем)\r\n          \r\n   const  slider = document.querySelector(container),\r\n          dots = []; \r\n\r\n    let slideIndex = 1; // текущий слайд\r\n    let offset = 0; //отступ от начала ленты\r\n\r\n   total.textContent = (slides.length < 10)?`0${slides.length}`:slides.length;\r\n\r\n   slidesField.style.width = 100*slides.length + '%'; // сделаем ширину иннера в процентах \r\n   //выстраиваем слоайды в одну линию\r\n   slidesField.style.display = 'flex';\r\n   slidesField.style.transition = '0.5s all';\r\n   //ограничим показ внутри wrapper, остальные слайды в линии скроем\r\n   slidesWraper.style.overflow = 'hidden';\r\n\r\n   slides.forEach(slide =>{\r\n       // у каждого слайда(картинки может быть разная ширина. Поставим всем одинаковую как у врапера)\r\n       slide.style.width = width;\r\n   });\r\n\r\n   next.addEventListener('click', ()=>{\r\n       //сдвигаем слайд\r\n       if(offset == widthInt * (slides.length -1)){        //если это поледний слайд\r\n           offset = 0;\r\n       }\r\n       else{\r\n           offset += widthInt;\r\n       }\r\n       slideIndex =(slideIndex == slides.length)? 1:++slideIndex;\r\n       setCurrent();\r\n    });\r\n\r\n   prev.addEventListener('click', ()=>{\r\n       //сдвигаем слайд\r\n       if(offset == 0){        //если это первый слайд\r\n           offset = widthInt * (slides.length -1);\r\n       }\r\n       else{\r\n           offset -= widthInt;\r\n       }\r\n       slideIndex =(slideIndex == 1)? slides.length:--slideIndex;\r\n       setCurrent();\r\n   });\r\n\r\n     ///////////////////////////////////////////////////////////////////////////////////////////\r\n   //точки для слайдера\r\n   ///////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n   slider.style.position = 'relative';\r\n   //создаем оберетку для точек и выставляем стили\r\n   const indicatorDots = document.createElement('ol');\r\n   indicatorDots.classList.add('carousel-indicators');\r\n   //mожно добавить ему свойства в css файл, а можно javascriptом\r\n   indicatorDots.style.cssText =`\r\n       position: absolute;\r\n       right: 0;\r\n       bottom: 0;\r\n       left: 0;\r\n       z-index: 15;\r\n       display: flex;\r\n       justify-content: center;\r\n       margin-right: 15%;\r\n       margin-left: 15%;\r\n       list-style: none;\r\n   `;\r\n   slider.append(indicatorDots);\r\n   //создаем точки\r\n\r\n   const clickDot = (e)=>{\r\n       if(e && e.target){\r\n           const dot = e.target;\r\n           slideIndex = +(e.target.getAttribute('data-slide-to'));\r\n           offset = widthInt * (slideIndex -1);\r\n           setCurrent();\r\n       }\r\n   };\r\n\r\n\r\n   for(let i = 0; i< slides.length;i++){\r\n       const dot = document.createElement('li');\r\n       dot.classList.add('dot');\r\n       dot.setAttribute('data-slide-to',i+1);// к какому слайду точка относиться\r\n       dot.style.cssText = `\r\n           box-sizing: content-box;\r\n           flex: 0 1 auto;\r\n           width: 30px;\r\n           height: 6px;\r\n           margin-right: 3px;\r\n           margin-left: 3px;\r\n           cursor: pointer;\r\n           background-color: #fff;\r\n           background-clip: padding-box;\r\n           border-top: 10px solid transparent;\r\n           border-bottom: 10px solid transparent;\r\n           opacity: .5;\r\n           transition: opacity .6s ease;\r\n       `;\r\n       indicatorDots.append(dot);\r\n       dot.addEventListener('click', clickDot);\r\n       dots.push(dot);\r\n   }\r\n  \r\n   const setCurrent = ()=> {\r\n       //картинки\r\n       slidesField.style.transform =`translateX(-${offset}px)`;\r\n       //нумерация - текстовое поле\r\n       current.textContent = (slides.length < 10)?`0${slideIndex}`:slideIndex; \r\n\r\n       //точки\r\n       dots.forEach((dot,index)=>{\r\n           if(index == slideIndex-1){//активаня точка\r\n               dot.style.opacity = 1;\r\n           }\r\n           else{\r\n               dot.style.opacity = '.5';\r\n           }\r\n       });\r\n      \r\n   };\r\n\r\n   setCurrent();\r\n\r\n}\r\n//module.exports = slider;//можно писать так\r\n// можно эксортировать по умолчанию\r\nexport default slider;\r\n\r\n\r\n// function slider(){\r\n    \r\n//      //////////////////////////////////////////////////////////////////////////////\r\n//     //cлайдер\r\n//     //////////////////////////////////////////////////////////////////////////////\r\n\r\n//     //1 variant\r\n//     // const offerSlider = document.querySelector('.offer__slider');\r\n//     // const currentElement = offerSlider.querySelector('.offer__slider-counter #current');\r\n//     // const offerSlides = offerSlider.querySelector('.offer__slider-wrapper').querySelectorAll('.offer__slide');\r\n//     // const totalSlides = offerSlides.length;\r\n//     // offerSlider.querySelector('.offer__slider-counter #total').textContent = (totalSlides < 10)? `0${totalSlides}`:totalSlides;\r\n//     // currentElement.textContent = '01';\r\n\r\n   \r\n//     // function getCurrent(element){\r\n//     //     return +element.textContent;\r\n//     // }\r\n//     // const setCurrent = (current,element,total = totalSlides)=>{\r\n//     //     //console.log(getCurrent(element));\r\n//     //     //console.log(current);\r\n//     //     if(current <= 0){ current = total;}\r\n//     //     else if(current> total){current = 1;} \r\n//     //     element.textContent = (current < 10)? `0${current}`:current;\r\n        \r\n//     //     offerSlides.forEach((slide,index)=>{\r\n//     //         if(!slide.classList.contains('hide')){\r\n//     //             slide.classList.add('hide');\r\n//     //         }\r\n//     //         if(slide.classList.contains('show')){\r\n//     //             slide.classList.remove('show');\r\n//     //         }\r\n//     //         if(index == current -1){\r\n//     //             slide.classList.remove('hide');\r\n//     //             slide.classList.add('show');\r\n//     //         }\r\n//     //     });\r\n//     // };\r\n//     // offerSlider.querySelector('.offer__slider-counter').addEventListener('click', (e)=>{\r\n//     //     e.preventDefault();\r\n//     //     if(e.target){\r\n//     //         let current = getCurrent(currentElement);\r\n//     //         if(e.target.matches('.offer__slider-prev')){\r\n//     //             setCurrent(--current, currentElement);\r\n//     //         }\r\n//     //         else if(e.target.matches('.offer__slider-next')){\r\n//     //             setCurrent(++current, currentElement);\r\n//     //         }\r\n//     //     }\r\n//     // });\r\n//     // //init\r\n//     // setCurrent(getCurrent(currentElement), currentElement);\r\n\r\n//     //////////////////////////////////////////////////////////////////////////////\r\n//     //2 variant лента слайдов\r\n\r\n//     function deleteNotDigits(str){\r\n//         return +str.replace(/\\D/g,'');\r\n//     }\r\n//     const  slidesWraper = document.querySelector(\".offer__slider-wrapper\"), // общая обертка для всех слайдов\r\n//             prev = document.querySelector('.offer__slider-prev'),           //кнопка prev\r\n//             next = document.querySelector(\".offer__slider-next\"),           //кнопка next\r\n//             total = document.querySelector('#total'),                       //поле total\r\n//             current = document.querySelector('#current'),                   //поле current\r\n//             slides = document.querySelectorAll('.offer__slide'),            //каждый отдельный слайд\r\n//             slidesField = document.querySelector(\".offer__slider-inner\"),   // общая обертка для всех слайдов внутри slidesWraper\r\n//             width = window.getComputedStyle(slidesWraper).width,            //видимая ширина ленты слайдов вычисленная автоматически при загрузке\r\n//            // widthInt = +width.slice(0, width.length -2);                   //видимая ширина ленты число (width - это строка ..px)\r\n//            widthInt = deleteNotDigits(width);                               // все не числа заменяем пустыми символами (удаляем)\r\n//     const  slider = document.querySelector('.offer__slider'),\r\n//            dots = [];\r\n    \r\n//     let slideIndex = 1; // текущий слайд\r\n//     let offset = 0; //отступ от начала ленты\r\n\r\n//     total.textContent = (slides.length < 10)?`0${slides.length}`:slides.length;\r\n\r\n//     slidesField.style.width = 100*slides.length + '%'; // сделаем ширину иннера в процентах \r\n//     //выстраиваем слоайды в одну линию\r\n//     slidesField.style.display = 'flex';\r\n//     slidesField.style.transition = '0.5s all';\r\n//     //ограничим показ внутри wrapper, остальные слайды в линии скроем\r\n//     slidesWraper.style.overflow = 'hidden';\r\n\r\n//     slides.forEach(slide =>{\r\n//         // у каждого слайда(картинки может быть разная ширина. Поставим всем одинаковую как у врапера)\r\n//         slide.style.width = width;\r\n//     });\r\n\r\n//     next.addEventListener('click', ()=>{\r\n//         //сдвигаем слайд\r\n//         if(offset == widthInt * (slides.length -1)){        //если это поледний слайд\r\n//             offset = 0;\r\n//         }\r\n//         else{\r\n//             offset += widthInt;\r\n//         }\r\n//         slideIndex =(slideIndex == slides.length)? 1:++slideIndex;\r\n//         setCurrent();\r\n//      });\r\n\r\n//     prev.addEventListener('click', ()=>{\r\n//         //сдвигаем слайд\r\n//         if(offset == 0){        //если это первый слайд\r\n//             offset = widthInt * (slides.length -1);\r\n//         }\r\n//         else{\r\n//             offset -= widthInt;\r\n//         }\r\n//         slideIndex =(slideIndex == 1)? slides.length:--slideIndex;\r\n//         setCurrent();\r\n//     });\r\n\r\n//       ///////////////////////////////////////////////////////////////////////////////////////////\r\n//     //точки для слайдера\r\n//     ///////////////////////////////////////////////////////////////////////////////////////////\r\n  \r\n//     slider.style.position = 'relative';\r\n//     //создаем оберетку для точек и выставляем стили\r\n//     const indicatorDots = document.createElement('ol');\r\n//     indicatorDots.classList.add('carousel-indicators');\r\n//     //mожно добавить ему свойства в css файл, а можно javascriptом\r\n//     indicatorDots.style.cssText =`\r\n//         position: absolute;\r\n//         right: 0;\r\n//         bottom: 0;\r\n//         left: 0;\r\n//         z-index: 15;\r\n//         display: flex;\r\n//         justify-content: center;\r\n//         margin-right: 15%;\r\n//         margin-left: 15%;\r\n//         list-style: none;\r\n//     `;\r\n//     slider.append(indicatorDots);\r\n//     //создаем точки\r\n\r\n//     const clickDot = (e)=>{\r\n//         if(e && e.target){\r\n//             const dot = e.target;\r\n//             slideIndex = +(e.target.getAttribute('data-slide-to'));\r\n//             offset = widthInt * (slideIndex -1);\r\n//             setCurrent();\r\n//         }\r\n//     };\r\n\r\n\r\n//     for(let i = 0; i< slides.length;i++){\r\n//         const dot = document.createElement('li');\r\n//         dot.classList.add('dot');\r\n//         dot.setAttribute('data-slide-to',i+1);// к какому слайду точка относиться\r\n//         dot.style.cssText = `\r\n//             box-sizing: content-box;\r\n//             flex: 0 1 auto;\r\n//             width: 30px;\r\n//             height: 6px;\r\n//             margin-right: 3px;\r\n//             margin-left: 3px;\r\n//             cursor: pointer;\r\n//             background-color: #fff;\r\n//             background-clip: padding-box;\r\n//             border-top: 10px solid transparent;\r\n//             border-bottom: 10px solid transparent;\r\n//             opacity: .5;\r\n//             transition: opacity .6s ease;\r\n//         `;\r\n//         indicatorDots.append(dot);\r\n//         dot.addEventListener('click', clickDot);\r\n//         dots.push(dot);\r\n//     }\r\n   \r\n//     const setCurrent = ()=> {\r\n//         //картинки\r\n//         slidesField.style.transform =`translateX(-${offset}px)`;\r\n//         //нумерация - текстовое поле\r\n//         current.textContent = (slides.length < 10)?`0${slideIndex}`:slideIndex; \r\n\r\n//         //точки\r\n//         dots.forEach((dot,index)=>{\r\n//             if(index == slideIndex-1){//активаня точка\r\n//                 dot.style.opacity = 1;\r\n//             }\r\n//             else{\r\n//                 dot.style.opacity = '.5';\r\n//             }\r\n//         });\r\n       \r\n//     };\r\n\r\n//     setCurrent();\r\n\r\n// }\r\n// //module.exports = slider;//можно писать так\r\n// // можно эксортировать по умолчанию\r\n// export default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass){\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //tabs\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n        tabsContent = document.querySelectorAll(tabsContentSelector),\r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    //скрывание ненужных табов (картинок)\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n        //убираем класс активности tabheader__item_active\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n    //в шестом стандарте можно использовать параметры по умолчанию (i = 0)\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        //ставим класс активности tabheader__item_active\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n\r\n                }\r\n            });\r\n        }\r\n    });\r\n    hideTabContent();\r\n    showTabContent();\r\n}\r\n\r\n//module.exports = tabs;//можно писать так\r\n// можно эксортировать по умолчанию\r\nexport default tabs;","function timer(id,deadLine){\r\n  //////////////////////////////////////////////////////////////////////////////\r\n    //timer\r\n    //////////////////////////////////////////////////////////////////////////////\r\n   \r\n    //ф-ция определяет разницу между дедлайном и текущем временем\r\n    function getTimeRemaining(endtime) {\r\n        //endtime приходит в формате строки '2022-05-11'\r\n        //получим разницу между endtime и текущей датой в кол-ве миллисек\r\n        const t = Date.parse(endtime) - Date.parse(new Date());\r\n        //разницу нужно превратить в кол-во дней,часов,минут\r\n        //Math.floor() - округление до ближайщего целого\r\n        const days = Math.floor(t / (1000 * 60 * 60 * 24)); //1000*60*60*24 - кол-во миллисек. в сутках\r\n        const hours = Math.floor((t / (1000 * 60 * 60) % 24)); //колт-во часов\r\n        const minutes = Math.floor((t / (1000 * 60) % 60)); //колт-во часов\r\n        const seconds = Math.floor((t / (1000) % 60)); //колт-во часов\r\n        //вернем объект из ф-ции\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n    //подставляем 0 впереди\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            //превращаем число в строку и подставляем впереди 0, если число меньше 10\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n    //ф-ция, которая будет устанавливать время на страницу\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n        //один раз запустим  updateClock(), чтобы не было мигания верстки\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime); //запускаем таймер и получаем объект\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n            //останавливаем таймер\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n    setClock(id, deadLine);\r\n}\r\n//module.exports = timer;//можно писать так\r\n// можно эксортировать по умолчанию\r\nexport default timer;"," function postData(){\r\n \r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //отправка форм на сервер\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //API (готовые методы и свойства, которые мы можем использовать)\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //fetch API\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //https://jsonplaceholder.typicode.com\r\n\r\n    //fetch -получить данные с url.(get запрос) fetch использует promise\r\n    //получаем JSON объект\r\n    //response.json() - превращает JSON объект в обычный объкт используя promise. когда выполниться promise, попадаем в then\r\n    // fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n    //   .then(response => response.json())\r\n    //   .then(json => console.log(json));\r\n    // //post запрос. Отправка данных\r\n    // fetch('https://jsonplaceholder.typicode.com/posts',{\r\n    //     method: \"POST\",\r\n    //     body: JSON.stringify({name:'Alex'}),\r\n    //     headers:{\r\n    //         'Content-type': 'application/json'\r\n    //     }\r\n    // })\r\n    //   .then(response => response.json())\r\n    //   .then(json => console.log(json));\r\n    //////////////////////////////////////////////////////////////////////////////\r\n     // перепишем function postData(form) из-за множества комментов  в bindpostData\r\n    //отправка данных на сервер без перезагрузки страницы\r\n    // function postData(form)\r\n    // {\r\n    //     form.addEventListener('submit',(e)=>\r\n    //     {\r\n    //         e.preventDefault();\r\n\r\n    //         //простое некрасивое оповещение пользователя\r\n    //         //создание нового блока на странице, куда будет выводиться сообщение о состоянии оправки формы\r\n    //         // const statusMessage = document.createElement('div');\r\n    //         // statusMessage.classList.add('status');\r\n    //         // statusMessage.textContent = message.loading;\r\n    //         // form.append(statusMessage);\r\n\r\n    //         //сообщение с картинкой\r\n    //         const statusMessageImg = document.createElement('img');\r\n    //         statusMessageImg.src = message.loading;\r\n    //         statusMessageImg.style.cssText = `\r\n    //             display:block;\r\n    //             margin:0 auto;\r\n    //         `;\r\n    //        // form.append(statusMessageImg);// иногда ломает верстку\r\n    //        form.insertAdjacentElement('afterend',statusMessageImg);\r\n    //         ////////////////////////////////////\r\n    //         //XMLHttpRequest устаревший вариате\r\n    //         // const request = new XMLHttpRequest();\r\n    //         // request.open('POST', 'server.php');\r\n    //         //\r\n    //         //form data - получение данных из формы с помощью объекта FormData\r\n    //         //и отправка на сервер в виде FormData\r\n    //         //\r\n\r\n    //         //здесь важно, чтобы в html файле у всех контролов формы (например у input) был аттрибут name\r\n    //         //этот заголовок устанавливать  не нужно!!! Получим пустой объект от сервера\r\n    //         // //request.setRequestHeader('Content-type','multipart/form-data');\r\n    //         // const formData = new FormData(form);\r\n\r\n    //         // request.send(formData);\r\n\r\n    //         // request.addEventListener('load',()=>{\r\n    //         //     if(request.status === 200){\r\n    //         //         console.log(request.response);\r\n    //         //         statusMessage.textContent = message.success;\r\n    //         //         //очистка полей формы\r\n    //         //         form.reset();\r\n    //         //         //убираем сообщение о статусе\r\n    //         //         setTimeout(()=>{\r\n    //         //             statusMessage.remove();\r\n    //         //         },2000);\r\n    //         //     }\r\n    //         //     else{\r\n    //         //         statusMessage.textContent = message.failure;\r\n    //         //     }\r\n\r\n    //         // });\r\n    //         //\r\n    //         ///////////////////////////////////////////////////////\r\n    //         //Отправка на сервер в формате JSON\r\n    //         //\r\n    //         //тут уже нужен заголовок\r\n    //       //  request.setRequestHeader('Content-type','application/json');\r\n    //         const formData = new FormData(form);\r\n\r\n    //         //нужно превратить FormData в обычный объект для JSON\r\n    //          const object = {};\r\n    //          formData.forEach(function(value,key){\r\n    //              object[key] = value;\r\n    //          });\r\n\r\n    //         // const json = JSON.stringify(object);\r\n\r\n    //         // request.send(json);\r\n\r\n    //         // request.addEventListener('load',()=>{\r\n    //         //     if(request.status === 200){\r\n    //         //         console.log(request.response);\r\n    //         //           //показ формы о загрузке\r\n    //         //           showThanksModal(message.success);\r\n    //         //     //  statusMessage.textContent = message.success;\r\n    //         //         //очистка полей формы\r\n    //         //         form.reset();\r\n    //         //         //убираем сообщение о статусе\r\n    //         //         // setTimeout(()=>{\r\n    //         //         //     statusMessage.remove();\r\n    //         //         // },2000);\r\n    //         //         //убираем спиннер\r\n    //         //         setTimeout(()=>{\r\n    //         //             statusMessageImg.remove();\r\n    //         //         },2000);\r\n\r\n    //         //     }\r\n    //         //     else{\r\n    //         //         //statusMessage.textContent = message.failure;\r\n    //         //         //показ формы о загрузке\r\n    //         //         showThanksModal(message.failure);\r\n    //         //     }\r\n\r\n    //         // });\r\n    //         ///////////////////////////////////////////////\r\n    //         //использует fetch для отправки на сервер\r\n    //         //promise придет в then когда выполниться запрос\r\n\r\n    //         fetch('server.php',{\r\n    //              method: \"POST\",\r\n    //              headers:{\r\n    //              'Content-type':'application/json'\r\n    //              },\r\n    //             // body: formData           //если передаем form data и headers нужно закоментировать\r\n    //             body:JSON.stringify(object) //если передаем JSON объект и headers нужно расскоментировать и в .php расскомент\r\n    //         }).then(data=>data.text()) //ответ от сервера\r\n    //         .then(data=>{\r\n    //             console.log(data);\r\n    //             //показ формы о загрузке\r\n    //             showThanksModal(message.success);\r\n    //             //убираем сообщение о статусе\r\n    //             statusMessageImg.remove();\r\n    //         }).catch(()=>{\r\n    //             showThanksModal(message.failure);\r\n    //         }).finally(()=>{\r\n    //              //очистка полей формы\r\n    //             form.reset();\r\n\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //JSON сервер\r\n    //////////////////////////////////////////////////////////////////////////////\r\n\r\n    // fetch('db.json')\r\n    // .then(data=>data.json())\r\n    // .then(res => console.log(res));\r\n\r\n    //https://coderoad.ru/55547572/json-сервер-не-распознается-как-внутренняя-или-внешняя-команда\r\n    //Во-первых, вам нужно проверить, установлен ли json-server глобально или нет. или вы можете установить его глобально с помощью\r\n    //npm install -g json-server\r\n    //Если вы устанавливаете его локально в своем проекте, используйте npx для его запуска\r\n    //npx json-server --watch db.json\r\n    // fetch('http://localhost:3000/menu')\r\n    //     .then(data => data.json())\r\n    //     .then(res => console.log(res));\r\n    //////////////////////////////////////////////////////////////////////////////\r\n    //ф-ция отправляет (постит) запрос на сервер, возвращает объект json\r\n    //необходимо использовать async await (подобие синхронного кода)\r\n    //asinc - указывает, что ф-ция использует асинхронный код, а await - какого вызова нам нужно дождаться\r\n    //await - дожидается окончания запроса и в res поместиться результат от сервера\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n        return await res.json(); //это promice, поэтому тоже нужен await, а потом выполниться return\r\n    };\r\n\r\n   \r\n    //получение ресурсов\r\n    const getResource = async (url) => {\r\n        const res = await fetch(url);\r\n        //fetch не выдает catch, поэтому используем свойства\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json(); //это promice, поэтому тоже нужен await, а потом выполниться return\r\n    };\r\n  // getResource('http://localhost:3000/menu')\r\n    // .then(data =>{\r\n    //     data.forEach(({img,altimg,title,descr,price}) =>{\r\n    //         new MenuCard(img,altimg,title,descr,price,'.menu .menu__field .container').render();\r\n    //     });\r\n    // });\r\n\r\n    //ecли используем библиотеку axios\r\n\r\n    \r\n    //не использует классы, а создает классы налету\r\n    // getResource('http://localhost:3000/menu')\r\n    // .then(data =>createCard(data)); \r\n    // function createCard(data){\r\n    //     data.forEach(({img,altimg,title,descr,price}) =>{\r\n    //         const element = document.createElement('div');\r\n    //         element.classList.add('menu__item');\r\n    //         element.innerHTML = `\r\n    //             <div class=\"menu__item\">\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //                 <div class=\"menu__item-price\">\r\n    //                     <div class=\"menu__item-cost\">Цена:</div>\r\n    //                     <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //                 </div>\r\n    //             </div>\r\n    //         `;\r\n\r\n    //         document.querySelector('.menu .menu__field .container').append(element);\r\n    //     });\r\n    // }\r\n}\r\nexport{postData};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"," \r\n //используем стандарт IE6. В подключаемых скриптах у нас экспорт по умолчанию\r\n import  tabs from './modules/tabs';\r\n import  modal from './modules/modal';\r\n import  cards  from './modules/cards';\r\n import  timer  from './modules/timer';\r\n import  calc  from './modules/calc';\r\n import  slider from './modules/slider';\r\n import {ShowHideModalWindow} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    //не стандарт IE6\r\n    //используем require\r\n    // const   tabs = require('./modules/tabs'),\r\n    //         modal = require('./modules/modal'),\r\n    //         cards = require('./modules/cards'),\r\n    //         timer = require('./modules/timer'),\r\n    //         calc = require('./modules/calc'),\r\n    //         slider = require('./modules/slider');\r\n\r\n    // tabs();\r\n    // modal();\r\n    // cards();\r\n    // timer();\r\n    // calc();\r\n    // slider();\r\n\r\n    //вызов модального окна по таймеру\r\n    const modalTimerID = setInterval(() => ShowHideModalWindow('.modal', modalTimerID), 50000);\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]','.modal',modalTimerID);\r\n    cards('.modal');\r\n    timer('.timer', '2022-05-11');\r\n    calc();\r\n    //slider();\r\n    slider({\r\n        container: '.offer__slider', \r\n        slide : '.offer__slide', \r\n        nextArrow : '.offer__slider-next',\r\n        prevArrow : '.offer__slider-prev', \r\n        totalCounter : '#total',\r\n        currentCounter : '#current', \r\n        wrapper : '.offer__slider-wrapper', \r\n        field : '.offer__slider-inner'\r\n    });\r\n}); \r\n//npx json-server --watch db.json\r\n//npx webpack "],"names":[],"sourceRoot":""}